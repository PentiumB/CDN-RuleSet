name: Generate RuleSet

on:
  schedule:
    - cron: "30 1 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate_lists:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install go and plugin
        run: |
          go install github.com/Loyalsoldier/geoip@latest

      - name: Curl source
        env:
          LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
        run: |
          mkdir -p source
          curl -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o ./asncsv.zip

      - name: Unzip
        env:
          NO_SKIP: true
        run: |
          unzip -jo asncsv.zip "GeoLite*/GeoLite*"
          rm asncsv.zip

      - name: transformation of lists with screening
        env:
          NO_SKIP: true
        run: bash cidr_extractor.sh


      - name: merge lst
        env:
          NO_SKIP: true
        run: |
          for file in source/*.lst; do cat "$file"; echo; done | sed '/^ *$/d'  > source/merged.sum
          
      - name: Compile RuleSet
        env:
          NO_SKIP: true
        run: |
          geoip convert

      - name: Get current date and release tag
        id: date
        run: |
          echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
          echo "TAG_NAME=build-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV


          git config user.email "PentiumB@users.noreply.github.com"
          git config user.name "PentiumB"
          git add .
          git commit -m "Generate rule-sets ${{ env.DATE }}" || echo "No changes to commit"
          git push
          
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$TAG_NAME" release/* --title "$TAG_NAME" --notes "Automated build"
